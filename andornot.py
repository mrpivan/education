Комбинации условий

Начнём с кода твоего ассистента:

user_name = "Дина"
weather_type = "солнечно"
temperature = 17

print("Привет,", user_name)
print("Я твой виртуальный помощник") 
print("Сегодня на улице", weather_type) 
print("Температура воздуха составляет", temperature, "град. по Цельсию") 


Давай добавим туда возможность рекомендовать одежду в зависимости от погоды. 
1.Если температура ниже 10 градусов ИЛИ идёт дождь и температура не выше 25 градусов, то предлагаем надеть что-то тёплое и взять зонт.

2.Если температура от 10 до 25 градусов И не идёт дождь и нет ветра, то предлагаем надеть куртку и кроссовки.

3.Во всех остальных случаях советуем пользователю остаться дома.

Код такой программы может выглядеть так:


if temperature < 10 or weather_type == "дождь" and temperature <= 25:
    print("Если идёшь на улицу, лучше надень что-то тёплое и возьми зонт!")
if temperature >= 10 and temperature <= 25 and not (weather_type == "дождь" or weather_type == "ветер"):
    print("Идеальная погода для куртки и кроссовок!") 
  
  
Сложновато? Не без этого: в столь длинных условиях легко запутаться даже опытному программисту. Давай упростим этот код, введя новые переменные для обозначения теплоты:


is_cold = temperature < 10 # холодно
is_warm = 10 <= temperature <= 25 # тепло
is_hot = temperature > 25 # жарко

if is_cold or weather_type == "дождь" and not is_hot:
    print("Если идёшь на улицу, лучше надень что-то тёплое и возьми зонт!")
if is_warm and not (weather_type == "дождь" or weather_type == "ветер"):
    print("Идеальная погода для куртки и кроссовок!") 
  
  
Гораздо читабельнее! Но приглядимся к логическому выражению

is_cold or weather_type == "дождь" and not is_hot 


---------------------------------------------------------------

Порядок логических операций

Все логические операции в Python выполняются, следуя вот такому приоритету:
not
and
or
Это значит, что сначала выполняются операции not, затем and, и в конце — or.

Пример

Давай рассмотрим выражение

result = True or False and not False 
      
Python будет вычислять его результат по шагам так:
   True or False and not False # исходное выражение

1) True or False and (not False)
   True or False and True

2) True or (False and True)
   True or False

3) (True or False)
   True  
      
not False становится True
      
False and True становится False
      
True or False становится True
      
Как видишь, на каждом шаге выполняется приоритет операций not > and > or.


--------------------------------------------------



  А теперь скажи, что выведет эта программа:
print(not False or True and not True) 

-------------------------------------------------

Скобки
      
А что там наш ассистент? Возьмём ещё одно сложное условие из его кода:
      
is_warm and not (weather_type == "дождь" or weather_type == "ветер") 


Как видишь, порядок исполнения логических операций можно изменить, если использовать скобки. Например, в выражении
  
result = (True or False) and not False 
  
сначала выполнится код в скобках, а затем всё остальное по обычному приоритету:
      
    (True or False) and not False # исходное выражение

1)  (True or False) and not False
        True and not False

2)  True and (not False)
      True and True

3)  (True and True)
    True 

True or False становится True

not False становится True

True and True становится True


Закрепим? Что выведет эта программа?

print(not (False or True) and not True) 

-----------------------------------------------------------

А теперь добавим новую функцию в ассистента! Для этого введём переменную time_of_day, означающую текущее время суток. 

Если время суток — утро, а на улице тепло или солнечно, ассистент должен предложить выйти на улицу погулять:
Сейчас самое время насладиться свежим воздухом - погода отличная!

Если вечер или на улице дождь и холодно, то ассистент должен предложить посмотреть фильм или почитать книгу:
Как насчёт любимого фильма или книги?



user_name = "Дина"
weather_type = "солнечно"
temperature = 17
time_of_day = "утро"

print("Привет,", user_name)
print("Я твой виртуальный помощник")
print("Сегодня на улице", weather_type)
print("Температура воздуха составляет", temperature, "град. по Цельсию")

is_cold = temperature < 10  # холодно
is_warm = 10 <= temperature <= 25  # тепло
is_hot = temperature > 25  # жарко

# Ваш код здесь


# И снова наш код
if is_cold or weather_type == "дождь" and not is_hot:
    print("Лучше надень что-то теплое и возьми зонт!")
if is_warm and not (weather_type == "дождь" or weather_type == "ветер"):
    print("Идеальная погода для куртки и кроссовок!")
else:
    print("Лучше остаться дома.")









